(self.webpackChunktypegraphql_prisma_website=self.webpackChunktypegraphql_prisma_website||[]).push([[510],{6265:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return r},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return m},default:function(){return h}});var p=a(2122),n=a(9756),i=(a(7294),a(3905)),r={},s="Examples",o={unversionedId:"examples",id:"examples",isDocsHomePage:!1,title:"Examples",description:"In the GitHub repository you can find a few examples of using the TypeGraphQL Prisma integration:",source:"@site/../docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",editUrl:"https://github.comichalLytek/typegraphql-prisma/edit/main/docs/../docs/examples.md",version:"current",frontMatter:{}},m=[],l={toc:m};function h(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,p.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"examples"},"Examples"),(0,i.kt)("p",null,"In the GitHub repository you can find a few examples of using the TypeGraphQL Prisma integration:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Prototyping")," - the workflow of using the generator that creates TypeGraphQL artifacts from Prisma schema and creating a GraphQL schema with all CRUD operation"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/1-prototyping"},"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/1-prototyping"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Basic")," - demonstrating how you can create custom methods or custom fields"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/2-basic"},"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/2-basic"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Picking Actions")," - demonstrating how you can choose certain Prisma actions to be exposed in the GraphQL schema"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/3-picking-actions"},"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/3-picking-actions"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Nest JS")," - showcase of combining ",(0,i.kt)("inlineCode",{parentName:"p"},"typegraphql-prisma")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"typegraphql-nestjs")," to expose TypeGraphQL-Prisma2 artifacts as GraphQL schema using Nest JS"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/4-nest-js"},"https://github.com/MichalLytek/typegraphql-prisma/tree/main/examples/4-nest-js")))),(0,i.kt)("p",null,"To run some example, simply go to the subdirectory, install the dependencies (",(0,i.kt)("inlineCode",{parentName:"p"},"npm i"),") and then start the server (",(0,i.kt)("inlineCode",{parentName:"p"},"npm start"),")."),(0,i.kt)("p",null,"Each subdirectory contains a ",(0,i.kt)("inlineCode",{parentName:"p"},"examples.gql")," file with a predefined GraphQL queries that you can use in GraphQL Playground (",(0,i.kt)("a",{parentName:"p",href:"http://localhost:4000"},(0,i.kt)("inlineCode",{parentName:"a"},"http://localhost:4000")),") and play with them by modifying it's shape and data."))}h.isMDXComponent=!0}}]);